<UserControl
    x:Class="SoundProcessing.Controls.ToolbarsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    d:DesignHeight="36"
    d:DesignWidth="720">

    <Grid Padding="8,8,8,8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="75*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Viewbox VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0">
            <CommandBar x:Name="FileToolbar" Background="Transparent" Foreground="White" FlowDirection="RightToLeft"
                        IsDynamicOverflowEnabled="False" DefaultLabelPosition="Right" OverflowButtonVisibility="Collapsed">
                <CommandBar.Content>
                    <Grid/>
                </CommandBar.Content>
                <AppBarButton x:Name="SaveFile" Icon="Save" Label="Save" VerticalAlignment="Stretch" Foreground="White"  FocusVisualPrimaryBrush="White" 
                              Command="{Binding SaveCommand}" IsEnabled="False"/>
                <AppBarButton x:Name="LoadFile" Icon="OpenFile" Label="Open" VerticalAlignment="Stretch" Foreground="White" FocusVisualPrimaryBrush="White" 
                              Command="{Binding OpenCommand}"/>
            </CommandBar>
        </Viewbox>
        <Viewbox HorizontalAlignment="Right" Grid.Column="1" Grid.Row="0">
            <CommandBar x:Name="SoundToolbar" Background="Transparent" Foreground="White" HorizontalAlignment="Right"
                         DefaultLabelPosition="Right" IsDynamicOverflowEnabled="False" OverflowButtonVisibility="Collapsed">
                <CommandBar.Resources>
                    <Style TargetType="FlyoutPresenter" x:Name="FlyoutStyle">
                        <Setter Property="IsTabStop" Value="True" />
                        <Setter Property="AllowFocusOnInteraction" Value="True" />
                    </Style>
                </CommandBar.Resources>
                <AppBarButton Icon="Find" Label="Show fundamental frequency signal" VerticalAlignment="Stretch" Foreground="White" Command="{Binding ShowBaseFrequencySignalCommand}" />
                <AppBarSeparator Foreground="White"/>
                <AppBarButton Icon="Calculator" Label="Fourier transform" VerticalAlignment="Stretch" Foreground="White" Command="{Binding FourierCommand}" />
                <AppBarButton x:Name="Filter" Icon="Filter" Label="Filter" Foreground="White" Flyout="{x:Bind FilterFlyout}" AllowFocusOnInteraction="True">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout x:Name="FilterFlyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource FlyoutStyle}" AllowFocusOnInteraction="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Viewbox Grid.Row="0" Grid.Column="0" Margin="4, 0, 4, 0" Height="24">
                                    <TextBlock Text="Filter type" FontWeight="Bold"/>
                                </Viewbox>
                                <RadioButton x:Name="LowPass" Grid.Row="1" Grid.Column="0" GroupName="FilterType"
                                             IsChecked="{Binding IsUsingLowPass, Mode=TwoWay}" Content="Low pass" />
                                <RadioButton x:Name="MiddlePass" Grid.Row="2" Grid.Column="0" GroupName="FilterType"
                                             IsChecked="{Binding IsUsingMiddlePass, Mode=TwoWay}" Content="Middle pass" />
                                <RadioButton x:Name="HighPass" Grid.Row="3" Grid.Column="0" GroupName="FilterType"
                                             IsChecked="{Binding IsUsingHighPass, Mode=TwoWay}" Content="High pass" />
                                <Viewbox Grid.Row="0" Grid.Column="1" Margin="4, 0, 4, 0" Height="24">
                                    <TextBlock Text="Window" FontWeight="Bold"/>
                                </Viewbox>
                                <RadioButton x:Name="RectangularWindow" Grid.Row="1" Grid.Column="1" GroupName="WindowType"
                                             IsChecked="{Binding IsUsingRectangularWindow, Mode=TwoWay}" Content="Rectangular" />
                                <RadioButton x:Name="HannWindow" Grid.Row="2" Grid.Column="1" GroupName="WindowType"
                                             IsChecked="{Binding IsUsingHannWindow, Mode=TwoWay}" Content="Von Hann" />
                                <RadioButton x:Name="HammingWindow" Grid.Row="3" Grid.Column="1" GroupName="WindowType"
                                             IsChecked="{Binding IsUsingHammingWindow, Mode=TwoWay}" Content="Hamming" />
                                <Viewbox Grid.Row="0" Grid.Column="2" Margin="4, 0, 4, 0" Height="24">
                                    <TextBlock Text="Parameters" FontWeight="Bold"/>
                                </Viewbox>
                                <RelativePanel Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" Margin="2,4,2,4">
                                    <Viewbox RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="MValue" RelativePanel.AlignVerticalCenterWithPanel="True">
                                        <TextBlock Text="Window length" VerticalAlignment="Center"/>
                                    </Viewbox>
                                    <controls:NumberBox x:Name="MValue" SpinButtonPlacementMode="Compact" RelativePanel.AlignRightWithPanel="True"
                                                        Maximum="44100" Minimum="0" Value="{Binding WindowLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </RelativePanel>
                                <RelativePanel Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" Margin="2,4,2,4">
                                    <Viewbox RelativePanel.AlignLeftWithPanel="True"  RelativePanel.LeftOf="RValue" RelativePanel.AlignVerticalCenterWithPanel="True">
                                        <TextBlock Text="Hop size" VerticalAlignment="Center"/>
                                    </Viewbox>
                                    <controls:NumberBox x:Name="RValue" SpinButtonPlacementMode="Compact" RelativePanel.AlignRightWithPanel="True"
                                                        Maximum="44100" Minimum="0" Value="{Binding HopSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </RelativePanel>
                                <RelativePanel Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" Margin="2,4,2,4">
                                    <Viewbox RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="LValue" RelativePanel.AlignVerticalCenterWithPanel="True">
                                        <TextBlock Text="Filter length" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Viewbox>
                                    <controls:NumberBox x:Name="LValue" SpinButtonPlacementMode="Compact" RelativePanel.AlignRightWithPanel="True"
                                                        Maximum="44100" Minimum="0" Value="{Binding FilterLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </RelativePanel>
                                <RelativePanel Grid.Row="4" Grid.Column="2" HorizontalAlignment="Stretch" Margin="2,4,2,4">
                                    <Viewbox RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="FcValue" RelativePanel.AlignVerticalCenterWithPanel="True">
                                        <TextBlock VerticalAlignment="Center" Text="Cutoff frequency" HorizontalAlignment="Left"/>
                                    </Viewbox>
                                    <controls:NumberBox x:Name="FcValue" SpinButtonPlacementMode="Compact" RelativePanel.AlignRightWithPanel="True" 
                                                        Maximum="20000" Minimum="0" Value="{Binding CutoffFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </RelativePanel>
                                <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Content="Use causal filter" HorizontalAlignment="Center"
                                          IsChecked="{Binding IsUsingCausalFilter, Mode=TwoWay}" />
                                <Button x:Name="RunFilter" Content="Run" Command="{Binding FilterCommand}" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="128"/>
                            </Grid>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </AppBarButton>
                <AppBarButton x:Name="WindowSizeButton" Icon="DockRight" Label="{Binding WindowSizeLabel, Mode=TwoWay}" Foreground="White" Flyout="{x:Bind WindowSizeFlyout}">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout x:Name="WindowSizeFlyout" Placement="Bottom" FlyoutPresenterStyle="{StaticResource FlyoutStyle}" AllowFocusOnInteraction="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <RadioButton x:Name="WindowSize512" IsChecked="{Binding IsWindow512Checked, Mode=TwoWay}" Content="512" Grid.Row="0" Grid.Column="0"/>
                                <RadioButton x:Name="WindowSize1024" IsChecked="{Binding IsWindow1024Checked, Mode=TwoWay}" Content="1024" Grid.Row="0" Grid.Column="1"/>
                                <RadioButton x:Name="WindowSize2048" IsChecked="{Binding IsWindow2048Checked, Mode=TwoWay}" Content="2048" Grid.Row="1" Grid.Column="0"/>
                                <RadioButton x:Name="WindowSize4096" IsChecked="{Binding IsWindow4096Checked, Mode=TwoWay}" Content="4096" Grid.Row="1" Grid.Column="1"/>
                            </Grid>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </AppBarButton>
                <AppBarSeparator Foreground="White"/>
                <AppBarButton x:Name="CepstralButton"  Icon="FourBars" Label="Cepstral analysis" VerticalAlignment="Stretch" 
                              Foreground="White" Command="{Binding CepstralCommand}"/>
                <AppBarButton x:Name="AmdfButton" Icon="Rotate" Label="AMDF" VerticalAlignment="Stretch" Foreground="White" Flyout="{x:Bind AmdfFlyout}">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout x:Name="AmdfFlyout" Placement="Bottom">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.Resources>
                                    <Style TargetType="Viewbox">
                                        <Setter Property="Margin" Value="4,4,4,4" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Slider Grid.Row="0" HorizontalAlignment="Stretch" Minimum="0" Maximum="0.2" Value="{Binding Accuracy, Mode=TwoWay}" 
                                    StepFrequency="0.001" Foreground="White" FocusVisualPrimaryBrush="White" Width="{x:Bind AmdfButton.Width}"/>
                                <Button Grid.Row="1" HorizontalAlignment="Stretch" Content="Run" Command="{Binding AMDFCommand}" Width="{x:Bind AmdfButton.Width}" />
                            </Grid>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </AppBarButton>
            </CommandBar>
        </Viewbox>
        <Viewbox Grid.Row="0" Grid.Column="2" >
            <ProgressRing x:Name="ProgressIndicator" IsActive="{Binding IsCalculating}" Padding="6,6,6,6" />
        </Viewbox>
    </Grid>
</UserControl>
